// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver');
const chrome = require('selenium-webdriver/chrome');
const {LockToken, LockNative, UnlockToken, UnlockNative} = require('./common');

let opts = new chrome.Options();

let Login = async(driver) => {
    // 1 | open | http://localhost:3006/login | 
    await driver.get("http://localhost:3006/login")
    // 2 | runScript | window.localStorage.clear() | 
    await driver.executeScript("window.localStorage.clear()")
    // 3 | waitForElementEditable | id=lgUsername | 30000
    await driver.wait(until.elementLocated(By.id("lgUsername")), 25000)
    await driver.wait(until.elementIsEnabled(await driver.findElement(By.id("lgUsername"))), 25000)
    // 4 | setWindowSize | 1070x824 | 
    await driver.manage().window().maximize()
    // 5 | click | id=lgUsername | 
    await driver.findElement(By.id("lgUsername")).click()
    // 6 | type | id=lgUsername | testtest
    await driver.findElement(By.id("lgUsername")).sendKeys("testtest")
    // 7 | click | id=lgPassword | 
    await driver.findElement(By.id("lgPassword")).click()
    // 8 | type | id=lgPassword | 1234567
    await driver.findElement(By.id("lgPassword")).sendKeys("1234567")
    
    await driver.wait(until.elementLocated(By.css(".submit_bar")), 100000)
    const submit_bar = await driver.findElement(By.css(".submit_bar"));
    await driver.executeScript("arguments[0].scrollIntoView()", submit_bar);
    await driver.wait(until.elementIsVisible(submit_bar), 100000);
    // 9 | click | css=.submit_bar | 
    await driver.executeScript("arguments[0].click()", submit_bar);
}

describe('ERC20', function() {
  this.timeout(100000)
  let driver
  let vars
  before(async function() {
    driver = await new Builder().forBrowser('chrome').setChromeOptions(opts.headless()).build()
    vars = {}
  })
  after(async function() {
    await driver.quit();
  })
  it('Lock Native token 1st time', async function() {
    await LockNative("0xC3DDDE3D73927C503632ff13f9C6D8B20D67c2d8", driver, null, Login);
  })

  it('Unlock ERC20 1st time', async function() {
    await UnlockToken("ERC20", "0xC3DDDE3D73927C503632ff13f9C6D8B20D67c2d8", driver, null, Login, null, null, null, "AGD");
  })

  it('Lock ERC20 1st time', async function() {
    await LockToken("ERC20", "0xC3DDDE3D73927C503632ff13f9C6D8B20D67c2d8", driver, null, Login, null, null, null, "AGD");
  })
  
  it('Unlock Native token 1st time', async function() {
    await UnlockNative("0xC3DDDE3D73927C503632ff13f9C6D8B20D67c2d8", driver, null, Login);
  })
})
